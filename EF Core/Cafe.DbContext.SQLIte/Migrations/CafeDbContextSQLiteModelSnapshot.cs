// <auto-generated />
using System;
using Cafe.DbContext.SQLIte;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cafe.DbContext.SQLIte.Migrations
{
    [DbContext(typeof(CafeDbContextSQLite))]
    partial class CafeDbContextSQLiteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Cafe.Models.ClientTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClientTables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Столик біля вікна"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Столик 1"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Столик 2"
                        });
                });

            modelBuilder.Entity("Cafe.Models.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Cafe.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Nomenclatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Суп гороховий",
                            Price = 45.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Суп сирний",
                            Price = 75.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Суп харчо",
                            Price = 55.0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Лоці",
                            Price = 105.0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Картопля фрі",
                            Price = 60.0
                        });
                });

            modelBuilder.Entity("Cafe.Models.Order", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Bill")
                        .HasColumnType("REAL");

                    b.Property<int>("ClientTableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WaiterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.HasIndex("ClientTableId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Date = new DateTime(2024, 3, 4, 18, 24, 57, 518, DateTimeKind.Local).AddTicks(7131),
                            Bill = 0.0,
                            ClientTableId = 1,
                            Id = 1,
                            WaiterId = 1
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 4, 18, 24, 57, 518, DateTimeKind.Local).AddTicks(7180),
                            Bill = 0.0,
                            ClientTableId = 2,
                            Id = 2,
                            WaiterId = 1
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 4, 18, 24, 57, 518, DateTimeKind.Local).AddTicks(7184),
                            Bill = 0.0,
                            ClientTableId = 3,
                            Id = 3,
                            WaiterId = 1
                        });
                });

            modelBuilder.Entity("Cafe.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("OrderDate");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Cafe.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Cafe.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WaiterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WaiterId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            WaiterId = 1
                        });
                });

            modelBuilder.Entity("Cafe.Models.Waiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Waiters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administartor",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("Cafe.Models.Order", b =>
                {
                    b.HasOne("Cafe.Models.ClientTable", "ClientTable")
                        .WithMany("Orders")
                        .HasForeignKey("ClientTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.Waiter", "Waiter")
                        .WithMany("Orders")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientTable");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("Cafe.Models.OrderDetail", b =>
                {
                    b.HasOne("Cafe.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Cafe.Models.UserRole", b =>
                {
                    b.HasOne("Cafe.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.Waiter", "Waiter")
                        .WithMany()
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("Cafe.Models.ClientTable", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Cafe.Models.Waiter", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
